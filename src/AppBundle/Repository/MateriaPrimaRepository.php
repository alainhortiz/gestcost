<?php

namespace AppBundle\Repository;

use AppBundle\Entity\MateriaPrima;
use Doctrine\ORM\EntityRepository;
use Exception;

/**
 * MateriaPrimaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MateriaPrimaRepository extends EntityRepository
{
    public function agregarMateriaPrima($data)
    {
        try{
            $em = $this->getEntityManager();
            $materiaPrima = new MateriaPrima();
            $materiaPrima->setCodigo($data['codigo']);
            $materiaPrima->setNombre($data['nombre']);
            $materiaPrima->setIsActive($data['activo']);

            $em->persist($materiaPrima);
            $em->flush();
            $msg = $materiaPrima;

        }catch (Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'Esta materia prima ya existe, no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar la materia prima';
            }
        }
        return $msg;
    }

    public function modificarMateriaPrima($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $materiaPrima = $em->getRepository('AppBundle:MateriaPrima')->find($data['idMateriaPrima']);

            if (!empty($materiaPrima)) {
                $materiaPrima->setCodigo($data['codigo']);
                $materiaPrima->setNombre($data['nombre']);
                $materiaPrima->setIsActive($data['activo']);

                $em->persist($materiaPrima);
                $em->flush();
                $msg = $materiaPrima;
            } else {
                $msg = $materiaPrima;
            }

        }catch (Exception $e)
        {
            $msg = 'Se produjo un error al modificar la materia prima';
        }

        return $msg;
    }

    public function eliminarMateriaPrima($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $materiaPrima = $em->getRepository('AppBundle:MateriaPrima')->find($id);

            if (!empty($materiaPrima)) {
                $materiaPrima->setIsActive(0);
                $em->persist($materiaPrima);
                $em->flush();
                $msg = $materiaPrima;
            } else {
                $msg = $materiaPrima;
            }

        }catch (Exception $e){

            $msg = 'Se produjo un error al eliminar la materia prima';

        }
        return $msg;
    }

    // Datos para exportar a Excel
    public function datosExportmateriasPrimas()
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT e.codigo, e.nombre  
                FROM AppBundle:MateriaPrima e';

        return $em->createQuery($dql)->getResult();

    }
}
