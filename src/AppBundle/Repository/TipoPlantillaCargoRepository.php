<?php

namespace AppBundle\Repository;

use AppBundle\Entity\TipoPlantillaCargo;
use Doctrine\ORM\EntityRepository;
use Exception;

/**
 * TipoPlantillaCargoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TipoPlantillaCargoRepository extends EntityRepository
{
    public function agregarTipoPlantilla($data)
    {
        try{
            $em = $this->getEntityManager();
            $tipoPlantilla = new TipoPlantillaCargo();
            $tipoPlantilla->setNombre($data['nombre']);

            $em->persist($tipoPlantilla);
            $em->flush();
            $msg = $tipoPlantilla;

        }catch (Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El tipo de plantilla ya existe, no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el tipo de plantilla';
            }
        }
        return $msg;
    }

    public function modificarTipoPlantilla($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $tipoPlantilla = $em->getRepository('AppBundle:TipoPlantillaCargo')->find($data['idTipoPlantilla']);

            if (!empty($tipoPlantilla)) {
                $tipoPlantilla->setNombre($data['nombre']);
                $em->flush();
                $msg = $tipoPlantilla;
            } else {
                $msg = $tipoPlantilla;
            }

        }catch (Exception $e)
        {
            $msg = 'Se produjo un error al modificar el tipo de plantilla';
        }

        return $msg;
    }

    public function eliminarTipoPlantilla($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $tipoPlantilla = $em->getRepository('AppBundle:TipoPlantillaCargo')->find($id);

            if (!empty($tipoPlantilla)) {
                $em->remove($tipoPlantilla);
                $em->flush();
                $msg = $tipoPlantilla;
            } else {
                $msg = $tipoPlantilla;
            }

        } catch (Exception $e) {

            if (strpos($e->getMessage(), 'foreign key') > 0) {
                $msg = 'Existen cargos asociados a este tipo de plantilla, no se puede eliminar';
            } else {
                $msg = 'Se produjo un error al eliminar el tipo de plantilla';
            }
        }
        return $msg;
    }
}
