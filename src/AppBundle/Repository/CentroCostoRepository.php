<?php

namespace AppBundle\Repository;

use AppBundle\Entity\CentroCosto;
use Doctrine\ORM\EntityRepository;
use Exception;

/**
 * CentroCostoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CentroCostoRepository extends EntityRepository
{
    public function agregarCentroCosto($data)
    {
        try{
            $em = $this->getEntityManager();
            $centroCosto = new CentroCosto();
            $centroCosto->setCodigo($data['codigo']);
            $centroCosto->setNombre($data['nombre']);
            $centroCosto->setIsActive($data['activo']);

            $divisionCentroCosto = $em->getRepository('AppBundle:DivisionCentroCosto')->find($data['division']);
            $centroCosto->setDivisionCentroCosto($divisionCentroCosto);

            $provincias = $em->getRepository('AppBundle:Provincia')->find($data['provincia']);
            $centroCosto->setProvincia($provincias);

            $em->persist($centroCosto);
            $em->flush();
            $msg = $centroCosto;

        }catch (Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El Centro de Costo ya existe, no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el Centro de Costo';
            }
        }
        return $msg;
    }

    public function modificarCentroCosto($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $centroCosto = $em->getRepository('AppBundle:CentroCosto')->find($data['idCentroCosto']);

           if (!empty($centroCosto)) {
               $centroCosto->setCodigo($data['codigo']);
               $centroCosto->setNombre($data['nombre']);
               $centroCosto->setIsActive($data['activo']);

               $divisionCentroCosto = $em->getRepository('AppBundle:DivisionCentroCosto')->find($data['division']);
               $centroCosto->setDivisionCentroCosto($divisionCentroCosto);

               $provincias = $em->getRepository('AppBundle:Provincia')->find($data['provincia']);
               $centroCosto->setProvincia($provincias);

               $em->persist($centroCosto);
               $em->flush();
               $msg = $centroCosto;
           } else {
               $msg = $centroCosto;
           }

        }catch (Exception $e)
        {
            $msg = 'Se produjo un error al modificar el Centro de Costo';
        }

        return $msg;
    }

    public function eliminarCentroCosto($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $centroCosto = $em->getRepository('AppBundle:CentroCosto')->find($id);
            if (!empty($centroCosto)) {
                $centroCosto->setIsActive(0);
                $em->persist($centroCosto);
                $em->flush();
                $msg = $centroCosto;
            } else {
                $msg = $centroCosto;
            }

        }catch (Exception $e){

            $msg = 'Se produjo un error al eliminar el Centro de Costo';

        }
        return $msg;
    }

    // Datos para exportar a Excel
    public function datosExportCentrosCostos()
    {

        $em = $this->getEntityManager();

        $dql = 'SELECT c.nombre as division, e.codigo, e.nombre as centro, p.nombre as Provincia
                FROM AppBundle:CentroCosto e
                JOIN e.provincia p
                JOIN e.divisionCentroCosto c';

        return $em->createQuery($dql)->getResult();

    }

    public function listarCentroCosto()
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT DISTINCT  d.id as divisionId, c.id, c.nombre 
                FROM AppBundle:CentroCosto c
                JOIN c.divisionCentroCosto d
                WHERE c.isActive = :p1
                ORDER BY d.id, c.id';

        $query = $em->createQuery($dql);
        $query->setParameter('p1', true);

        return $query->getResult();

    }
}
