<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PlanEstimadoCentroCostoMesMateriaPrimaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlanEstimadoCentroCostoMesMateriaPrimaRepository extends EntityRepository
{
    public function totalMateriaPrimaDivisionMensual($data)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT e.mes, SUM(e.totalMateriaPrima) as total 
                FROM AppBundle:PlanEstimadoCentroCostoMesMateriaPrima e
                JOIN e.divisionCentroCosto d
                JOIN e.centroCosto c
                JOIN e.planEstimadoIndicadores p
                WHERE d.id =:p1
                AND p.id = :p2
                GROUP BY e.mes
                ORDER BY e.id';

        $query = $em->createQuery($dql);
        $query->setParameter('p1', $data['division']);
        $query->setParameter('p2', $data['idPlanEstimado']);

        return $query->getResult();

    }

    public function graficoTotalesEstimadosCentroCostosMateriasPrimas($idPlanEstimado,$idDivision)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT c.nombre, SUM(e.totalMateriaPrima) as totalMateriaPrima
                FROM AppBundle:PlanEstimadoCentroCostoMesMateriaPrima e
                JOIN e.centroCosto c
                JOIN c.divisionCentroCosto d
                JOIN e.planEstimadoIndicadores p
                WHERE d.id =:p1
                AND p.id =:p2
                GROUP BY c.nombre';

        $query = $em->createQuery($dql);
        $query->setParameter('p1', $idDivision);
        $query->setParameter('p2', $idPlanEstimado);

        return $query->getResult();

    }

    public function graficoTotalesEstimadosMensualCentroCostosMateriasPrimas($idPlanEstimado,$idCentroCosto)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT e.mes, e.totalMateriaPrima 
                FROM AppBundle:PlanEstimadoCentroCostoMesMateriaPrima e
                JOIN e.centroCosto c
                JOIN e.planEstimadoIndicadores p
                WHERE c.id =:p1
                AND p.id =:p2';

        $query = $em->createQuery($dql);
        $query->setParameter('p1', $idCentroCosto);
        $query->setParameter('p2', $idPlanEstimado);

        return $query->getResult();

    }

    //Funciones para el export
    public function datosExportEstimadoMateriaPrimaCentroCostoMeses($idPlanEstimado)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT d.nombre as division, c.nombre as centro, e.mes, e.coeficiente ,e.totalMateriaPrima as presupuesto
                FROM AppBundle:PlanEstimadoCentroCostoMesMateriaPrima e
                JOIN e.planEstimadoIndicadores p
                JOIN e.centroCosto c
                JOIN c.divisionCentroCosto d
                WHERE p.id = :p1';

        $query = $em->createQuery($dql);
        $query->setParameter('p1', $idPlanEstimado);

        return $query->getResult();

    }

    public function datosExportEstimadosCentroCostosMateriasPrimas($idPlanEstimado,$idDivision)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT c.nombre as centro, e.mes, e.totalMateriaPrima
                FROM AppBundle:PlanEstimadoCentroCostoMesMateriaPrima e
                JOIN e.centroCosto c
                JOIN c.divisionCentroCosto d
                JOIN e.planEstimadoIndicadores p
                WHERE d.id =:p1
                AND p.id =:p2
                ORDER BY c.id, e.id';

        $query = $em->createQuery($dql);
        $query->setParameter('p1', $idDivision);
        $query->setParameter('p2', $idPlanEstimado);

        return $query->getResult();

    }

}
