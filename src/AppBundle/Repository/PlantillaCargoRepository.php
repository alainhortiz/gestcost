<?php

namespace AppBundle\Repository;

use AppBundle\Entity\PlantillaCargo;
use Doctrine\ORM\EntityRepository;
use Exception;

/**
 * PlantillaCargoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlantillaCargoRepository extends EntityRepository
{
    public function agregarPlantillaCargo($data)
    {
        try{
            $em = $this->getEntityManager();
            $plantillaCargo = new PlantillaCargo();
            $plantillaCargo->setCantidad($data['cantidad']);

            $tipoPlantilla = $em->getRepository('AppBundle:TipoPlantillaCargo')->find($data['tipoPlantilla']);
            $plantillaCargo->setTipoPlantilla($tipoPlantilla);

            $denominadorCargo = $em->getRepository('AppBundle:DenominadorCargo')->find($data['denominadorCargo']);
            $plantillaCargo->setDenominadorCargo($denominadorCargo);

            $centroCosto = $em->getRepository('AppBundle:CentroCosto')->find($data['centroCosto']);
            $plantillaCargo->setCentroCosto($centroCosto);

            $em->persist($plantillaCargo);
            $em->flush();
            $msg = $plantillaCargo;

        }catch (Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El cargo en este centro de costo ya existe, no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el cargo en este centro de costo';
            }
        }
        return $msg;
    }

    public function modificarPlantillaCargo($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $plantillaCargo = $em->getRepository('AppBundle:PlantillaCargo')->find($data['idPlantillaCargo']);

            if (!empty($plantillaCargo)) {
                $plantillaCargo->setCantidad($data['cantidad']);

                $tipoPlantilla = $em->getRepository('AppBundle:TipoPlantillaCargo')->find($data['tipoPlantilla']);
                $plantillaCargo->setTipoPlantilla($tipoPlantilla);

                $denominadorCargo = $em->getRepository('AppBundle:DenominadorCargo')->find($data['denominadorCargo']);
                $plantillaCargo->setDenominadorCargo($denominadorCargo);

                $centroCosto = $em->getRepository('AppBundle:CentroCosto')->find($data['centroCosto']);
                $plantillaCargo->setCentroCosto($centroCosto);

                $em->flush();
                $msg = $plantillaCargo;
            } else {
                $msg = $plantillaCargo;
            }

        }catch (Exception $e)
        {
            $msg = 'Se produjo un error al modificar el cargo en este centro de costo';
        }

        return $msg;
    }

    public function eliminarPlantillaCargo($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $plantillaCargo = $em->getRepository('AppBundle:PlantillaCargo')->find($id);

            if (!empty($plantillaCargo)) {
                $em->remove($plantillaCargo);
                $em->flush();
                $msg = $plantillaCargo;
            } else {
                $msg = $plantillaCargo;
            }

        }catch (Exception $e){

            $msg = 'Se produjo un error al eliminar el cargo en este centro de costo';

        }
        return $msg;
    }

    // Datos para exportar a Excel
    public function datosExportPlantillaCargosTotales()
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT d.denominadorCargo as denominador, d.codigo, d.grupoEscala as escala, d.categoria, d.salario, sum(p.cantidad) as aprobada
                FROM AppBundle:PlantillaCargo p
                JOIN p.denominadorCargo d
                GROUP BY d.denominadorCargo
                ORDER BY d.denominadorCargo, d.grupoEscala';

        return $em->createQuery($dql)->getResult();

    }

    public function datosExportPlantillaCargos()
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT e.nombre as division, c.nombre as centro, d.codigo, d.denominadorCargo as denominador, d.grupoEscala as escala, d.categoria, d.salario, sum(p.cantidad) as aprobada
                FROM AppBundle:PlantillaCargo p
                JOIN p.denominadorCargo d
                JOIN p.centroCosto c
                JOIN c.divisionCentroCosto e
                GROUP BY e.nombre, c.nombre, d.denominadorCargo
                ORDER BY e.nombre, c.nombre';

        return $em->createQuery($dql)->getResult();

    }
}
