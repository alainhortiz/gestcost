<?php

namespace AppBundle\Repository;

use AppBundle\Entity\OtroGasto;
use Doctrine\ORM\EntityRepository;
use Exception;

/**
 * OtroGastoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OtroGastoRepository extends EntityRepository
{
    public function agregarOtroGasto($data)
    {
        try{
            $em = $this->getEntityManager();
            $otroGasto = new OtroGasto();
            $otroGasto->setCodigo($data['codigo']);
            $otroGasto->setNombre($data['nombre']);
            $otroGasto->setIsActive($data['activo']);

            $tipoServicio = $em->getRepository('AppBundle:TipoServicio')->find($data['tipoServicio']);
            $otroGasto->setTipoServicio($tipoServicio);

            $em->persist($otroGasto);
            $em->flush();
            $msg = $otroGasto;

        }catch (Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'Este gasto ya existe, no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el gasto';
            }
        }
        return $msg;
    }

    public function modificarOtroGasto($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $otroGasto = $em->getRepository('AppBundle:OtroGasto')->find($data['idOtroGasto']);

            if (!empty($otroGasto)) {
                $otroGasto->setCodigo($data['codigo']);
                $otroGasto->setNombre($data['nombre']);
                $otroGasto->setIsActive($data['activo']);

                $tipoServicio = $em->getRepository('AppBundle:TipoServicio')->find($data['tipoServicio']);
                $otroGasto->setTipoServicio($tipoServicio);

                $em->persist($otroGasto);
                $em->flush();
                $msg = $otroGasto;
            } else {
                $msg = $otroGasto;
            }

        }catch (Exception $e)
        {
            $msg = 'Se produjo un error al modificar el gasto';
        }

        return $msg;
    }

    public function eliminarOtroGasto($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $otroGasto = $em->getRepository('AppBundle:OtroGasto')->find($id);

            if (!empty($otroGasto)) {
                $otroGasto->setIsActive(0);
                $em->persist($otroGasto);
                $em->flush();
                $msg = $otroGasto;
            } else {
                $msg = $otroGasto;
            }

        }catch (Exception $e){

            $msg = 'Se produjo un error al eliminar el gasto';

        }
        return $msg;
    }

    // Datos para exportar a Excel
    public function datosExportOtrosGastos()
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT e.codigo, e.nombre, t.nombre as tipoServicio
                FROM AppBundle:OtroGasto e
                JOIN e.tipoServicio t
                ORDER BY e.codigo ASC';

        return $em->createQuery($dql)->getResult();

    }
}
