<?php

namespace AppBundle\Repository;

use AppBundle\Entity\ModeloTransporte;
use Doctrine\ORM\EntityRepository;
use Exception;

/**
 * ModeloTransporteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ModeloTransporteRepository extends EntityRepository
{
    public function agregarModeloTransporte($data)
    {
        try{
            $em = $this->getEntityManager();
            $modeloTransporte = new ModeloTransporte();
            $modeloTransporte->setNombre($data['nombre']);

            $tipoTransporte = $em->getRepository('AppBundle:TipoTransporte')->find($data['tipoTransporte']);
            $modeloTransporte->setTipoTransporte($tipoTransporte);

            $em->persist($modeloTransporte);
            $em->flush();
            $msg = $modeloTransporte;

        }catch (Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El modelo de transporte ya existe, no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el modelo de transporte';
            }
        }
        return $msg;
    }

    public function modificarModeloTransporte($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $modeloTransporte = $em->getRepository('AppBundle:ModeloTransporte')->find($data['idModeloTransporte']);

            if (!empty($modeloTransporte)) {
                $modeloTransporte->setNombre($data['nombre']);

                $tipoTransporte = $em->getRepository('AppBundle:TipoTransporte')->find($data['tipoTransporte']);
                $modeloTransporte->setTipoTransporte($tipoTransporte);

                $em->persist($modeloTransporte);
                $em->flush();
                $msg = $modeloTransporte;
            } else {
                $msg = $modeloTransporte;
            }

        }catch (Exception $e)
        {
            $msg = 'Se produjo un error al modificar el modelo de transporte';
        }

        return $msg;
    }

    public function eliminarModeloTransporte($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $modeloTransporte = $em->getRepository('AppBundle:ModeloTransporte')->find($id);

            if (!empty($modeloTransporte)) {
                $em->remove($modeloTransporte);
                $em->flush();
                $msg = $modeloTransporte;
            } else {
                $msg = $modeloTransporte;
            }

        } catch (Exception $e) {

            if (strpos($e->getMessage(), 'foreign key') > 0) {
                $msg = 'Existen transportes asociados a este modelo, no se puede eliminar';
            } else {
                $msg = 'Se produjo un error al eliminar el modelo de transporte';
            }
        }
        return $msg;
    }

    // Datos para exportar a Excel
    public function datosExportModelosTransportes()
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT t.nombre as tipoTransporte, e.nombre as Modelo 
                FROM AppBundle:ModeloTransporte e
                JOIN e.tipoTransporte t';

        return $em->createQuery($dql)->getResult();

    }
}
